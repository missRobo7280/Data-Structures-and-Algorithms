//finding all possible paths from top to bottom
//   https://www.geeksforgeeks.org/problems/find-all-possible-paths-from-top-to-bottom/1
#include<bits/stdc++.h>
using namespace std;
void fun(int i,int j,int m,int n,vector<vector<int>> &grid, vector<int>&temp,vector<vector<int>>&ans)
{
   temp.push_back(grid[i][j]);
   if(i+1<n)fun(i+1,j,m,n,grid,temp,ans);
   if(j+1<n)fun(i,j+1,m,n,grid,temp,ans);
   if(i==n-1 && j==m-1)ans.push_back(temp);
   temp.pop_back();
}

void print(vector<vector<int>>grid)
{
    for(int i=0;i<grid.size();i++)
    {
        for(int j=0;j<grid[i].size();j++)
        {
            cout<<grid[i][j]<<" ";
        }
        cout<<endl;
    }
}
vector<vector<int>>path(vector<vector<int>>&grid,int n,int m)
{
    vector<int>temp;
    vector<vector<int>>ans;
    fun(0,0,n,m,grid,temp,ans);
    return ans;
}

int main()
{
    int n,m;
    cin>>n>>m;
    vector<vector<int>>grid(n,vector<int>(m));
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            cin>>grid[i][j];
        }
    }
    vector<vector<int>>finalAns=path(grid,n,m);
    print(finalAns);
}
