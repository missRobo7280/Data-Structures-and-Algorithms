//finding the connected components in the graph
#include<bits/stdc++.h>
using namespace std;
void dfs(int node,vector<bool>&vis,vector<int>adj[])
{
    vis[node]=1;
    for(auto it:adj[node])
    {
        if(!vis[it])
        {
            dfs(it,vis,adj);
        }
    }
}

int connectedCompo(int n,vector<bool>&vis,vector<int>adj[])
{
    int cnt=0;
    for(int i=0;i<n;i++)
    {
        if(vis[i]==0)
        {
        dfs(i,vis,adj);
        cnt++;
        }
    }
    return cnt;
}
int main(){
    int n,e;cin>>n>>e;
    vector<int>adj[n+1];
    for(int i=0;i<e;i++)
    {
        int u,v;cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);
    }
    vector<bool>vis(n+1,0);
    int ans;
    ans=connectedCompo(n,vis,adj);
    cout<<ans;
}
