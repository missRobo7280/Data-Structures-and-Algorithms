//DFS for a graph
#include<bits/stdc++.h>
using namespace std;
void DFS(int node,vector<int>adj[],vector<int>&vis,vector<int>&ans)
{
    vis[node]=1;
    ans.push_back(node);
    for(auto it:adj[node])
    {
        if(vis[it]!=1)
        DFS(it,adj,vis,ans);
    }

}
int main()
{
    int n,m;
    cin>>n>>m;
    vector<int>adj[n+1];
    for(int i=0;i<n;i++)
    {
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
        adj[v].push_back(u);

    }
    vector<int>vis(n,0);
    vector<int>ans;
    cout<<"Enter the start node:";
    int start_node;cin>>start_node;
    DFS(start_node,adj,vis,ans);
    for(auto it:ans)
    {
        cout<<it<<" ";
    }

}
